<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deepexi.promotion.mapper.CommentLabelGroupHistoryMapper">
    <resultMap type="com.deepexi.promotion.domain.CommentLabelGroupHistoryDO" id="BaseResultMap">
        <result property="id" column="id"/>
        <result property="labelGroupId" column="label_group_id"/>
        <result property="labelGroupName" column="label_group_name"/>
        <result property="history"  column="history"/>
        <result property="appId" column="app_id"/>
        <result property="dr" column="dr"/>
        <result property="version" column="version"/>
        <result property="createdTime" column="created_time"/>
        <result property="updatedTime" column="updated_time"/>
        <result property="remark" column="remark"/>
        <result property="createdBy" column="created_by"/>
        <result property="updatedBy" column="updated_by"/>
        <result property="tenantId" column="tenant_id"/>
        <result property="updateType" column="update_type"/>
    </resultMap>
    <sql id="Base_Column_List">
            id,
            label_group_id,
            label_group_name,
            JSON_UNQUOTE(history)as history,
            app_id,
            dr,
            version,
            created_time,
            updated_time,
            remark,
            created_by,
            updated_by,
            tenant_id ,
            update_type
            </sql>


    <select id="findAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM comment_label_group_history
        WHERE dr = 0
        <if test="labelGroupId != null">
            and label_group_id = #{labelGroupId}
        </if>
        <if test="tenantId != null and tenantId != ''">
            and tenant_id = #{tenantId}
        </if>
        order by id desc
    </select>

    <!--根据标签组ID删除标签组历史-->
    <update  id="deleteBatchByGroupsIds" parameterType="java.util.List">
        UPDATE comment_label_group_history SET dr=1
        WHERE model_id IN
        <foreach close=")" collection="ids" item="item" open="(" separator=", ">
            #{item}
        </foreach>

    </update>
</mapper>